% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GridSearch.R
\name{CellMentor}
\alias{CellMentor}
\title{Select Optimal Hyperparameters for CSFNMF}
\usage{
CellMentor(
  object,
  k = NULL,
  init_methods = c("regulated"),
  alpha_range = c(1, 5, 10),
  beta_range = c(1, 5, 10),
  gamma_range = c(0, 0.001, 0.1, 1),
  delta_range = c(0, 0.1, 1, 2.5),
  n_iter = 1,
  verbose = TRUE,
  num_cores = 1,
  seed = 1
)
}
\arguments{
\item{object}{CSFNMF object containing reference and query data matrices, with required matrices
for \code{data} and \code{ref} under \code{object@matrices}.}

\item{k}{Optional rank value (number of factors). If \code{NULL}:
- Uses existing rank from \code{object} if available
- Otherwise determines automatically using \code{SelectRank}}

\item{init_methods}{Vector of initialization methods to test. Options:
- "uniform": Random uniform initialization
- "regulated": Cell-type guided initialization
- "NNDSVD": Non-negative Double SVD
- "skmeanGenes": Gene clustering-based
- "skmeanCells": Cell clustering-based
Default: c("regulated")}

\item{alpha_range}{Vector of \code{alpha} values to test.
Controls within-class scatter (cell similarity within the same type).
Default: c(1, 5, 10)}

\item{beta_range}{Vector of \code{beta} values to test.
Controls between-class scatter (cell separation between different types).
Default: c(1, 5, 10)}

\item{gamma_range}{Vector of sparsity parameter values to test.
Controls sparsity of the factorization.
Default: c(0, 0.001, 0.1, 1)}

\item{delta_range}{Vector of orthogonality parameter values to test.
Controls orthogonality between factors.
Default: c(0, 0.1, 1, 2.5)}

\item{n_iter}{Number of repetitions per configuration for averaging results (default: 3).}

\item{verbose}{Logical; whether to show progress messages during optimization.
Default: \code{TRUE}}

\item{num_cores}{Number of cores to use for parallel processing.
If > 1, parameter combinations are tested in parallel.
Default: 1}

\item{subset_size}{Optional integer specifying the number of cells to use in a subset for faster
parameter optimization. When provided, a random subset of cells is selected from the data
and used to test different parameter configurations. This can reduce computation time,
but the best parameters found may vary slightly from those found with the full dataset.
After selecting the optimal parameters, the function runs the final model on the full
dataset. Default: \code{NULL} (uses full dataset).}
}
\value{
List containing:
- \code{best_params}: List with the overall best parameter configuration:
* \code{k}: Selected rank
* \code{init_method}: Best initialization method
* \code{alpha}: Best alpha parameter
* \code{beta}: Best beta parameter
* \code{gamma}: Best gamma value
* \code{delta}: Best delta value
* \code{accuracy}: Best achieved accuracy
* \code{loss}: Corresponding loss value
- \code{results}: Data frame of all combinations tested, including:
* \code{init_method}: Initialization method used
* \code{alpha}: Alpha parameter value
* \code{beta}: Beta parameter value
* \code{gamma}: Gamma parameter value
* \code{delta}: Delta parameter value
* \code{accuracy}: Achieved accuracy
* \code{loss}: Final loss value
* \code{convergence_iter}: Number of iterations for convergence
- \code{best_model}: CSFNMF model object trained with the best parameters.
}
\description{
Tests different combinations of hyperparameters using \code{RunCSFNMF} to find the optimal configuration.
The function performs a grid search over specified parameter ranges, evaluating the model's
performance for each combination. Parameters \code{alpha} and \code{beta} are kept equal during optimization.
The rank (\code{k}) can be provided, taken from an existing object, or determined automatically using
\code{SelectRank}.
}
\examples{
# Basic usage with default parameter ranges
optimal_params <- CellMentor(object)

# Custom parameter ranges with parallel processing
optimal_params <- CellMentor(
  object,
  k = 50,
  init_methods = c("NNDSVD"),
  alpha_range = c(1, 2, 3),
  beta_range = c(1, 2, 5),
  gamma_range = c(0, 0.1, 0.2),
  delta_range = c(0, 1),
  num_cores = 4
)

# Access best overall parameters
print(optimal_params$best_params)

# Compare results across methods
lapply(optimal_params$results, function(x) x$best_params)

}
\seealso{
\code{\link{RunCSFNMF}} for the main model fitting function
\code{\link{SelectRank}} for automatic rank selection
\code{\link{plot_parameter_search}} for results visualization
}
